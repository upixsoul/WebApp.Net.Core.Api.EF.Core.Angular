// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Net.Core.Api.EF.Core.Angular.Models;

#nullable disable

namespace WebApp.Net.Core.Api.EF.Core.Angular.Migrations
{
    [DbContext(typeof(AppDbContext1))]
    [Migration("20230619211254_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialNetworkSocialNetworkService", b =>
                {
                    b.Property<int>("SocialNetworkServicesId")
                        .HasColumnType("int");

                    b.Property<int>("SocialNetworksId")
                        .HasColumnType("int");

                    b.HasKey("SocialNetworkServicesId", "SocialNetworksId");

                    b.HasIndex("SocialNetworksId");

                    b.ToTable("SocialNetworkSocialNetworkService");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.PersonDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PersonasDetails");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialNetworkDetails");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialNetworkServices");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkSocialNetworkDetail", b =>
                {
                    b.Property<int>("SocialNetworkId")
                        .HasColumnType("int");

                    b.Property<int>("SocialNetworkDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<string>("InternalAnalisys")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialNetworkId", "SocialNetworkDetailId");

                    b.HasIndex("SocialNetworkDetailId");

                    b.ToTable("SocialNetworkSocialNetworkDetails");
                });

            modelBuilder.Entity("SocialNetworkSocialNetworkService", b =>
                {
                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkService", null)
                        .WithMany()
                        .HasForeignKey("SocialNetworkServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetwork", null)
                        .WithMany()
                        .HasForeignKey("SocialNetworksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.PersonDetail", b =>
                {
                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.Person", null)
                        .WithOne("PersonaDetails")
                        .HasForeignKey("WebApp.Net.Core.Api.EF.Core.Angular.Models.PersonDetail", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetwork", b =>
                {
                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.Person", "Persona")
                        .WithMany("SocialNertWorks")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkSocialNetworkDetail", b =>
                {
                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkDetail", "SocialNetworkDetails")
                        .WithMany("SocialNetworkSocialNetworkDetails")
                        .HasForeignKey("SocialNetworkDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetwork", "SocialNetworks")
                        .WithMany("SocialNetworkSocialNetworkDetails")
                        .HasForeignKey("SocialNetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocialNetworkDetails");

                    b.Navigation("SocialNetworks");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.Person", b =>
                {
                    b.Navigation("PersonaDetails")
                        .IsRequired();

                    b.Navigation("SocialNertWorks");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetwork", b =>
                {
                    b.Navigation("SocialNetworkSocialNetworkDetails");
                });

            modelBuilder.Entity("WebApp.Net.Core.Api.EF.Core.Angular.Models.SocialNetworkDetail", b =>
                {
                    b.Navigation("SocialNetworkSocialNetworkDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
